OpenShadingLanguage 1.00
# Compiled by oslc 1.11.14
# options: -o C:\Users\aleks\AppData\Local\Temp\tmprmtejlqv.oso -IC:\Program Files\Blender Foundation\Blender 3.1\3.1\scripts\addons\cycles\shader
shader PxrBump2RoughnessRead
param	int	enable	1		%meta{string,widget,"checkBox"} %meta{int,connectable,0} %meta{string,help,"This will enabling Bump Roughness or disable it"}  %read{1,1} %write{2147483647,-1}
param	int	invertBumpNormal	0		%meta{string,widget,"checkBox"} %meta{int,connectable,0} %meta{string,help,"This will invert Bump Normal"}  %read{185,185} %write{2147483647,-1}
param	struct Manifold	inputManifold			%meta{string,page,""} %meta{string,tag,"struct"} %meta{string,widget,"null"} %meta{string,widget,"null"}  %read{10,10} %write{2147483647,-1} %struct{"Manifold"} %structfields{Q,QN,Qradius} %structfieldtypes{"pnf"} %structnfields{3}
param	point	inputManifold.Q	0 0 0		%meta{string,page,""} %meta{string,tag,"struct"} %meta{string,widget,"null"} %meta{string,widget,"null"}  %read{12,13} %write{2147483647,-1} %mystruct{inputManifold} %mystructfield{0} %derivs
param	normal	inputManifold.QN	0 0 1		%meta{string,page,""} %meta{string,tag,"struct"} %meta{string,widget,"null"} %meta{string,widget,"null"}  %read{2147483647,-1} %write{2147483647,-1} %mystruct{inputManifold} %mystructfield{1}
param	float	inputManifold.Qradius	0		%meta{string,page,""} %meta{string,tag,"struct"} %meta{string,widget,"null"} %meta{string,widget,"null"}  %read{2147483647,-1} %write{2147483647,-1} %mystruct{inputManifold} %mystructfield{2}
param	float	baseRoughness	0.00100000005		%meta{string,help,"This is the roughness of a micro-facet at a singletexel level of the input textures"}  %read{273,305} %write{2147483647,-1}
param	float	gain	1		%meta{string,help,"This is a multiplier to the aggregate roughness and normal map"}  %read{219,219} %write{2147483647,-1}
param	float	bumpNormalGain	1		%meta{string,help,"multiplier to the normal map magnitude"}  %read{204,208} %write{2147483647,-1}
param	float	anisotropyGain	1		%meta{string,help,"This is a multiplier to the aggregate anisotropy"}  %read{284,286} %write{2147483647,-1}
param	string	filename_d1	""		%meta{string,widget,"assetIdInput"} %meta{string,fileTypes,"tex"} %meta{int,constant,1} %meta{string,context,"image context"} %meta{int,connectable,0} %meta{string,help,"This expects the two derivative maps, constructed by the --bumpslopes maketx option. See the maketx manual for more information."}  %read{80,129} %write{2147483647,-1}
param	string	filename_check	""		%meta{string,widget,"assetIdInput"} %meta{string,fileTypes,"tex"} %meta{int,constant,1} %meta{string,context,"image context"} %meta{int,connectable,0} %meta{string,help,"texmap sanity check"}  %read{134,156} %write{2147483647,-1}
param	float	frequency	1		%meta{string,help,"This is a multiplier to st-coordinates"}  %read{72,72} %write{2147483647,-1} %derivs
param	float	rotation	0		%meta{string,help,"This is a rotation control to st-coordinates, in degrees"}  %read{20,20} %write{2147483647,-1} %derivs
param	float	blur	0		%meta{string,page,"Filtering"} %meta{string,help,"Amount of blur to apply to texture lookup."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	filterScale	1		%meta{string,widget,"null"} %meta{string,help,"Multiplies the size of the texture filter, less than one for sharper textures."}  %read{16,16} %write{2147483647,-1}
oparam	vector	resultBumpNormal	0 0 0		%meta{string,widget,"null"}  %read{210,218} %write{0,308} %initexpr
oparam	color	testTex	0 0 0		%read{2147483647,-1} %write{160,160}
oparam	float	resultRoughness	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{302,305}
oparam	float	resultAnisotropy	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{306,306}
oparam	vector	resultAnisotropyDirection	0 0 0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{303,307}
oparam	float	resultHeightMap	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{304,304}
global	point	P	%read{162,163} %write{2147483647,-1} %derivs
global	normal	N	%read{195,308} %write{2147483647,-1}
global	normal	Ng	%read{191,191} %write{2147483647,-1}
local	vector	___257_axis	%read{26,28} %write{23,23} %derivs
local	float	___257_cosang	%read{25,66} %write{24,24} %derivs
local	float	___257_sinang	%read{36,61} %write{24,24} %derivs
local	float	___257_cosang1	%read{35,60} %write{25,25} %derivs
local	float	___257_x	%read{29,61} %write{26,26} %derivs
local	float	___257_y	%read{34,59} %write{27,27} %derivs
local	float	___257_z	%read{36,64} %write{28,28} %derivs
local	matrix	___257_M	%read{70,70} %write{68,68} %derivs
local	vector	___371_dQdx	%read{172,177} %write{162,162}
local	vector	___371_dQdy	%read{173,176} %write{163,163}
local	float	___371_A	%read{168,176} %write{164,164}
local	float	___371_B	%read{169,173} %write{165,165}
local	float	___371_C	%read{169,177} %write{166,166}
local	float	___371_D	%read{168,172} %write{167,167}
local	float	___371_invdet	%read{175,179} %write{171,171}
local	float	___373_del	%read{244,247} %write{242,242}
local	int	___418_texExists	%read{86,140} %write{79,139}
local	string	___427_filter	%read{102,156} %write{3,3}
local	float	___427_inputS	%read{17,156} %write{12,73} %derivs
local	float	___427_inputT	%read{17,154} %write{13,74} %derivs
local	float	___427_textureFilterScale	%read{102,156} %write{16,16}
local	color	___427_resultRGBA_d1.c	%read{103,158} %write{96,103} %mystruct{___427_resultRGBA_d1} %mystructfield{0}
local	float	___427_resultRGBA_d1.a	%read{2147483647,-1} %write{97,102} %mystruct{___427_resultRGBA_d1} %mystructfield{1}
local	color	___427_resultRGBA_d2.c	%read{130,159} %write{123,130} %mystruct{___427_resultRGBA_d2} %mystructfield{0}
local	float	___427_resultRGBA_d2.a	%read{2147483647,-1} %write{124,129} %mystruct{___427_resultRGBA_d2} %mystructfield{1}
local	color	___427_resultTest.c	%read{157,160} %write{150,157} %mystruct{___427_resultTest} %mystructfield{0}
local	float	___427_resultTest.a	%read{2147483647,-1} %write{151,156} %mystruct{___427_resultTest} %mystructfield{1}
local	color	___427_deriv1	%read{180,304} %write{158,158}
local	color	___427_deriv2	%read{182,184} %write{159,159}
local	vector	___427_UV	%read{6,7} %write{4,5} %derivs
local	int	___427_hasUV	%read{2147483647,-1} %write{5,5}
local	point	___427_QT	%read{73,74} %write{72,72} %derivs
local	float	___427_mys	%read{164,166} %write{75,75} %derivs
local	float	___427_myt	%read{165,167} %write{76,76} %derivs
local	vector	___427_pPps	%read{189,267} %write{175,200}
local	vector	___427_pPpt	%read{189,271} %write{179,201}
local	float	___427_dx	%read{187,225} %write{180,187}
local	float	___427_dy	%read{188,229} %write{181,188}
local	float	___427_dxdx	%read{222,222} %write{182,182}
local	float	___427_dydy	%read{230,230} %write{183,183}
local	float	___427_dxdy	%read{226,226} %write{184,184}
local	vector	___427_PN	%read{191,216} %write{189,198}
local	int	___427_lefthanded	%read{196,202} %write{190,194}
local	float	___427_vargain	%read{220,228} %write{219,219}
local	float	___427_sxx	%read{233,246} %write{223,223}
local	float	___427_sxy	%read{234,258} %write{227,227}
local	float	___427_syy	%read{238,257} %write{231,231}
local	float	___427_l1	%read{251,274} %write{245,245}
local	float	___427_l2	%read{257,275} %write{248,248}
local	vector	___427_v1	%read{254,264} %write{249,254}
local	vector	___427_v2	%read{260,270} %write{255,260}
local	vector	___427__pPpu	%read{303,303} %write{266,266}
local	vector	___427__pPpv	%read{2147483647,-1} %write{272,272}
local	float	___427_base_roughsqr	%read{274,275} %write{273,273}
local	float	___427_varianceU	%read{276,299} %write{274,296}
local	float	___427_varianceV	%read{278,300} %write{275,298}
local	float	___427_resultRoughnessU	%read{280,302} %write{277,299}
local	float	___427_resultRoughnessV	%read{280,280} %write{279,300}
local	float	___427_rudivrv	%read{281,282} %write{280,280}
local	float	___427_resultAnisotropy	%read{286,301} %write{283,289}
local	float	___430__alpha	%read{296,297} %write{294,294}
local	float	___430_variance	%read{296,298} %write{295,295}
const	normal	$const1	0 0 0		%read{0,0} %write{2147483647,-1}
const	int	$const2	1		%read{1,270} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	string	$const3	"smartcubic"		%read{3,3} %write{2147483647,-1}
const	float	$const4	0		%read{4,289} %write{2147483647,-1}
const	string	$const5	"geom:uv"		%read{5,5} %write{2147483647,-1}
const	int	$const6	0		%read{6,306} %write{2147483647,-1}
temp	float	$tmp2	%read{14,14} %write{6,6} %derivs
temp	float	$tmp3	%read{15,15} %write{7,7} %derivs
const	string	$const7	"Texture_Std_SetupInputs"		%read{8,8} %write{2147483647,-1}
const	string	$const8	"Texture_GetSTWithManifold"		%read{9,9} %write{2147483647,-1}
temp	int	$tmp4	%read{11,11} %write{10,10}
temp	point	$tmp5	%read{72,72} %write{71,71} %derivs
temp	point	$tmp6	%read{69,69} %write{17,17} %derivs
temp	float	$tmp7	%read{24,24} %write{20,20} %derivs
const	string	$const9	"radians"		%read{18,18} %write{2147483647,-1}
const	float	$const10	3.14159274		%read{19,19} %write{2147483647,-1}
const	float	$const11	180		%read{19,19} %write{2147483647,-1}
temp	float	$tmp8	%read{20,20} %write{19,19} %derivs
const	point	$const12	0 0 0		%read{22,71} %write{2147483647,-1}
const	point	$const13	0 0 1		%read{22,22} %write{2147483647,-1}
const	string	$const14	"rotate"		%read{21,21} %write{2147483647,-1}
temp	vector	$tmp11	%read{23,23} %write{22,22} %derivs
const	float	$const15	1		%read{25,301} %write{2147483647,-1}
const	int	$const16	2		%read{28,215} %write{2147483647,-1}
temp	float	$tmp12	%read{33,33} %write{29,29} %derivs
temp	float	$tmp13	%read{31,31} %write{30,30} %derivs
temp	float	$tmp14	%read{32,32} %write{31,31} %derivs
temp	float	$tmp15	%read{33,33} %write{32,32} %derivs
temp	float	$tmp16	%read{68,68} %write{33,33} %derivs
temp	float	$tmp17	%read{35,35} %write{34,34} %derivs
temp	float	$tmp18	%read{37,37} %write{35,35} %derivs
temp	float	$tmp19	%read{37,37} %write{36,36} %derivs
temp	float	$tmp20	%read{68,68} %write{37,37} %derivs
temp	float	$tmp21	%read{39,39} %write{38,38} %derivs
temp	float	$tmp22	%read{41,41} %write{39,39} %derivs
temp	float	$tmp23	%read{41,41} %write{40,40} %derivs
temp	float	$tmp24	%read{68,68} %write{41,41} %derivs
temp	float	$tmp25	%read{43,43} %write{42,42} %derivs
temp	float	$tmp26	%read{45,45} %write{43,43} %derivs
temp	float	$tmp27	%read{45,45} %write{44,44} %derivs
temp	float	$tmp28	%read{68,68} %write{45,45} %derivs
temp	float	$tmp29	%read{50,50} %write{46,46} %derivs
temp	float	$tmp30	%read{48,48} %write{47,47} %derivs
temp	float	$tmp31	%read{49,49} %write{48,48} %derivs
temp	float	$tmp32	%read{50,50} %write{49,49} %derivs
temp	float	$tmp33	%read{68,68} %write{50,50} %derivs
temp	float	$tmp34	%read{52,52} %write{51,51} %derivs
temp	float	$tmp35	%read{54,54} %write{52,52} %derivs
temp	float	$tmp36	%read{54,54} %write{53,53} %derivs
temp	float	$tmp37	%read{68,68} %write{54,54} %derivs
temp	float	$tmp38	%read{56,56} %write{55,55} %derivs
temp	float	$tmp39	%read{58,58} %write{56,56} %derivs
temp	float	$tmp40	%read{58,58} %write{57,57} %derivs
temp	float	$tmp41	%read{68,68} %write{58,58} %derivs
temp	float	$tmp42	%read{60,60} %write{59,59} %derivs
temp	float	$tmp43	%read{62,62} %write{60,60} %derivs
temp	float	$tmp44	%read{62,62} %write{61,61} %derivs
temp	float	$tmp45	%read{68,68} %write{62,62} %derivs
temp	float	$tmp46	%read{67,67} %write{63,63} %derivs
temp	float	$tmp47	%read{65,65} %write{64,64} %derivs
temp	float	$tmp48	%read{66,66} %write{65,65} %derivs
temp	float	$tmp49	%read{67,67} %write{66,66} %derivs
temp	float	$tmp50	%read{68,68} %write{67,67} %derivs
temp	vector	$tmp51	%read{71,71} %write{70,70} %derivs
temp	vector	$tmp52	%read{70,70} %write{69,69} %derivs
const	color	$const17	0 0 0		%read{96,156} %write{2147483647,-1}
const	string	$const18	"Texture_GetColor"		%read{77,132} %write{2147483647,-1}
const	string	$const19	""		%read{80,145} %write{2147483647,-1}
temp	int	$tmp54	%read{81,81} %write{80,80}
temp	int	$tmp55	%read{84,84} %write{83,83}
temp	int	$tmp56	%read{2147483647,-1} %write{85,85}
const	string	$const20	"exists"		%read{85,139} %write{2147483647,-1}
temp	int	$tmp57	%read{87,87} %write{86,86}
temp	int	$tmp58	%read{89,89} %write{88,88}
temp	int	$tmp59	%read{90,94} %write{89,93}
temp	int	$tmp60	%read{92,92} %write{91,91}
temp	int	$tmp61	%read{93,93} %write{92,92}
const	string	$const21	"texture not found \\'%s\\'"		%read{95,149} %write{2147483647,-1}
const	string	$const22	"TEXTURE NOT FOUND"		%read{98,152} %write{2147483647,-1}
const	string	$const23	"TEXTURE FOUND"		%read{99,153} %write{2147483647,-1}
temp	float	$tmp62	%read{102,102} %write{100,100} %derivs
const	string	$const24	"alpha"		%read{102,156} %write{2147483647,-1}
const	string	$const25	"interp"		%read{102,156} %write{2147483647,-1}
const	string	$const26	"blur"		%read{102,156} %write{2147483647,-1}
const	string	$const27	"missingcolor"		%read{102,156} %write{2147483647,-1}
const	string	$const28	"missingalpha"		%read{102,156} %write{2147483647,-1}
const	string	$const29	"fill"		%read{102,156} %write{2147483647,-1}
const	string	$const30	"firstchannel"		%read{102,156} %write{2147483647,-1}
const	string	$const31	"width"		%read{102,156} %write{2147483647,-1}
const	string	$const32	"subimage"		%read{102,156} %write{2147483647,-1}
temp	int	$tmp63	%read{102,102} %write{101,101}
const	int	$const33	3		%read{129,129} %write{2147483647,-1}
temp	int	$tmp65	%read{108,108} %write{107,107}
temp	int	$tmp66	%read{111,111} %write{110,110}
temp	int	$tmp67	%read{2147483647,-1} %write{112,112}
temp	int	$tmp68	%read{114,114} %write{113,113}
temp	int	$tmp69	%read{116,116} %write{115,115}
temp	int	$tmp70	%read{117,121} %write{116,120}
temp	int	$tmp71	%read{119,119} %write{118,118}
temp	int	$tmp72	%read{120,120} %write{119,119}
temp	float	$tmp73	%read{129,129} %write{127,127} %derivs
temp	int	$tmp74	%read{129,129} %write{128,128}
temp	int	$tmp76	%read{135,135} %write{134,134}
temp	int	$tmp77	%read{138,138} %write{137,137}
temp	int	$tmp78	%read{2147483647,-1} %write{139,139}
temp	int	$tmp79	%read{141,141} %write{140,140}
temp	int	$tmp80	%read{143,143} %write{142,142}
temp	int	$tmp81	%read{144,148} %write{143,147}
temp	int	$tmp82	%read{146,146} %write{145,145}
temp	int	$tmp83	%read{147,147} %write{146,146}
temp	float	$tmp84	%read{156,156} %write{154,154} %derivs
temp	int	$tmp85	%read{156,156} %write{155,155}
const	string	$const34	"partialDeriv"		%read{161,161} %write{2147483647,-1}
temp	float	$tmp86	%read{170,170} %write{168,168}
temp	float	$tmp87	%read{170,170} %write{169,169}
temp	float	$tmp88	%read{171,171} %write{170,170}
temp	vector	$tmp89	%read{174,174} %write{172,172}
temp	vector	$tmp90	%read{174,174} %write{173,173}
temp	vector	$tmp91	%read{175,175} %write{174,174}
temp	vector	$tmp92	%read{178,178} %write{176,176}
temp	vector	$tmp93	%read{178,178} %write{177,177}
temp	vector	$tmp94	%read{179,179} %write{178,178}
temp	int	$tmp95	%read{186,186} %write{185,185}
temp	float	$tmp96	%read{192,192} %write{191,191}
temp	int	$tmp97	%read{193,193} %write{192,192}
temp	int	$tmp98	%read{197,197} %write{196,196}
temp	vector	$tmp99	%read{200,200} %write{199,199}
temp	int	$tmp100	%read{203,203} %write{202,202}
temp	float	$tmp101	%read{206,206} %write{204,204}
temp	float	$tmp102	%read{206,206} %write{205,205}
temp	float	$tmp103	%read{209,209} %write{207,207}
temp	float	$tmp104	%read{209,209} %write{208,208}
const	float	$const36	-1		%read{209,209} %write{2147483647,-1}
temp	float	$tmp105	%read{211,211} %write{210,210}
temp	vector	$tmp106	%read{214,214} %write{211,211}
temp	float	$tmp107	%read{213,213} %write{212,212}
temp	vector	$tmp108	%read{214,214} %write{213,213}
temp	vector	$tmp109	%read{217,217} %write{214,214}
temp	float	$tmp110	%read{216,216} %write{215,215}
temp	vector	$tmp111	%read{217,217} %write{216,216}
temp	float	$tmp112	%read{223,223} %write{220,220}
const	float	$const37	2		%read{220,293} %write{2147483647,-1}
temp	float	$tmp113	%read{222,222} %write{221,221}
temp	float	$tmp114	%read{223,223} %write{222,222}
temp	float	$tmp115	%read{227,227} %write{224,224}
temp	float	$tmp116	%read{226,226} %write{225,225}
temp	float	$tmp117	%read{227,227} %write{226,226}
temp	float	$tmp118	%read{231,231} %write{228,228}
temp	float	$tmp119	%read{230,230} %write{229,229}
temp	float	$tmp120	%read{231,231} %write{230,230}
const	string	$const38	"covarToEigen2D"		%read{232,232} %write{2147483647,-1}
temp	float	$tmp121	%read{236,236} %write{233,233}
temp	float	$tmp122	%read{235,235} %write{234,234}
const	float	$const40	4		%read{234,234} %write{2147483647,-1}
temp	float	$tmp123	%read{236,236} %write{235,235}
temp	float	$tmp124	%read{239,239} %write{236,236}
temp	float	$tmp125	%read{238,238} %write{237,237}
temp	float	$tmp126	%read{239,239} %write{238,238}
temp	float	$tmp127	%read{241,241} %write{239,239}
temp	float	$tmp128	%read{241,241} %write{240,240}
temp	float	$tmp129	%read{242,242} %write{241,241}
const	float	$const41	0.5		%read{245,248} %write{2147483647,-1}
temp	float	$tmp130	%read{244,244} %write{243,243}
temp	float	$tmp131	%read{245,245} %write{244,244}
temp	float	$tmp132	%read{247,247} %write{246,246}
temp	float	$tmp133	%read{248,248} %write{247,247}
const	vector	$const42	0 0 0		%read{249,255} %write{2147483647,-1}
temp	float	$tmp134	%read{252,252} %write{251,251}
temp	float	$tmp135	%read{253,253} %write{252,252}
temp	float	$tmp136	%read{258,258} %write{257,257}
temp	float	$tmp137	%read{259,259} %write{258,258}
temp	vector	$tmp138	%read{263,263} %write{261,261}
temp	float	$tmp139	%read{263,263} %write{262,262}
temp	vector	$tmp140	%read{266,266} %write{263,263}
temp	float	$tmp141	%read{265,265} %write{264,264}
temp	vector	$tmp142	%read{266,266} %write{265,265}
temp	vector	$tmp143	%read{269,269} %write{267,267}
temp	float	$tmp144	%read{269,269} %write{268,268}
temp	vector	$tmp145	%read{272,272} %write{269,269}
temp	float	$tmp146	%read{271,271} %write{270,270}
temp	vector	$tmp147	%read{272,272} %write{271,271}
temp	float	$tmp148	%read{277,277} %write{276,276}
const	float	$const43	9.99999996e-13		%read{277,279} %write{2147483647,-1}
temp	float	$tmp149	%read{279,279} %write{278,278}
temp	float	$tmp150	%read{283,283} %write{281,281}
temp	float	$tmp151	%read{283,283} %write{282,282}
temp	int	$tmp152	%read{285,285} %write{284,284}
temp	float	$tmp153	%read{288,288} %write{286,286}
const	string	$const44	"clamp"		%read{287,287} %write{2147483647,-1}
temp	float	$tmp154	%read{289,289} %write{288,288}
temp	float	$tmp155	%read{292,292} %write{290,290}
temp	float	$tmp156	%read{292,292} %write{291,291}
temp	float	$tmp157	%read{293,293} %write{292,292}
temp	float	$tmp158	%read{294,294} %write{293,293}
temp	float	$tmp159	%read{298,298} %write{297,297}
temp	float	$tmp160	%read{302,302} %write{301,301}
const	vector	$const45	1 0 0		%read{307,307} %write{2147483647,-1}
code resultBumpNormal
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:120
#         string widget="null",
	assign		resultBumpNormal $const1 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{120} %argrw{"wr"}
code ___main___
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:156
#         string filter = "smartcubic";
	eq		$tmp1 enable $const2 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{156} %argrw{"wrr"}
	if		$tmp1 305 309 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:157
#         // string filter = "smartbicubic";
	assign		___427_filter $const3 	%line{157} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:166
#         int hasUV = getattribute( "geom:uv", UV);
	assign		___427_UV $const4 	%line{166} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:167
#         
	getattribute	___427_hasUV $const5 ___427_UV 	%line{167} %argrw{"wrw"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:172
#                                 filterScale, 
	compref		$tmp2 ___427_UV $const6 	%line{172} %argrw{"wrr"}
	compref		$tmp3 ___427_UV $const2 	%argrw{"wrr"}
	functioncall	$const7 17 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:110
#     Texture_GetSTWithManifold(manifold, inputS, inputT, outputS, outputT);
	functioncall	$const8 16 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h"} %line{110} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:92
#     if (isconnected(manifold)) {
	isconnected	$tmp4 inputManifold 	%line{92} %argrw{"wr"}
	if		$tmp4 14 16 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:93
#         outputS = manifold.Q[0];
	compref		___427_inputS inputManifold.Q $const6 	%line{93} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:94
#         outputT = manifold.Q[1];
	compref		___427_inputT inputManifold.Q $const2 	%line{94} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:96
#         outputS = inputS;
	assign		___427_inputS $tmp2 	%line{96} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:97
#         outputT = inputT;
	assign		___427_inputT $tmp3 	%line{97} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:112
#     textureFilterScale = filterScale;
	assign		___427_textureFilterScale filterScale 	%line{112} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:184
#                           point(0,0,0),point(0,0,1)) * frequency;
	point		$tmp6 ___427_inputS ___427_inputT $const4 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{184} %argrw{"wrrr"}
	functioncall	$const9 21 	%argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:65
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp8 $const10 $const11 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{65} %argrw{"wrr"}
	mul		$tmp7 rotation $tmp8 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:184
#                           point(0,0,0),point(0,0,1)) * frequency;
	functioncall	$const14 72 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{184} %argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:270
#     vector axis = normalize (b - a);
	sub		$tmp11 $const13 $const12 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{270} %argrw{"wrr"}
	normalize	___257_axis $tmp11 	%argrw{"wr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:272
#     sincos (angle, sinang, cosang);
	sincos		$tmp7 ___257_sinang ___257_cosang 	%line{272} %argrw{"rww"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:273
#     float cosang1 = 1.0 - cosang;
	sub		___257_cosang1 $const15 ___257_cosang 	%line{273} %argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:274
#     float x = axis[0], y = axis[1], z = axis[2];
	compref		___257_x ___257_axis $const6 	%line{274} %argrw{"wrr"}
	compref		___257_y ___257_axis $const2 	%argrw{"wrr"}
	compref		___257_z ___257_axis $const16 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:275
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	mul		$tmp12 ___257_x ___257_x 	%line{275} %argrw{"wrr"}
	mul		$tmp13 ___257_x ___257_x 	%argrw{"wrr"}
	sub		$tmp14 $const15 $tmp13 	%argrw{"wrr"}
	mul		$tmp15 $tmp14 ___257_cosang 	%argrw{"wrr"}
	add		$tmp16 $tmp12 $tmp15 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:276
#                        x * y * cosang1 + z * sinang,
	mul		$tmp17 ___257_x ___257_y 	%line{276} %argrw{"wrr"}
	mul		$tmp18 $tmp17 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp19 ___257_z ___257_sinang 	%argrw{"wrr"}
	add		$tmp20 $tmp18 $tmp19 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:277
#                        x * z * cosang1 - y * sinang,
	mul		$tmp21 ___257_x ___257_z 	%line{277} %argrw{"wrr"}
	mul		$tmp22 $tmp21 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp23 ___257_y ___257_sinang 	%argrw{"wrr"}
	sub		$tmp24 $tmp22 $tmp23 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:279
#                        x * y * cosang1 - z * sinang,
	mul		$tmp25 ___257_x ___257_y 	%line{279} %argrw{"wrr"}
	mul		$tmp26 $tmp25 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp27 ___257_z ___257_sinang 	%argrw{"wrr"}
	sub		$tmp28 $tmp26 $tmp27 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:280
#                        y * y + (1.0 - y * y) * cosang,
	mul		$tmp29 ___257_y ___257_y 	%line{280} %argrw{"wrr"}
	mul		$tmp30 ___257_y ___257_y 	%argrw{"wrr"}
	sub		$tmp31 $const15 $tmp30 	%argrw{"wrr"}
	mul		$tmp32 $tmp31 ___257_cosang 	%argrw{"wrr"}
	add		$tmp33 $tmp29 $tmp32 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:281
#                        y * z * cosang1 + x * sinang,
	mul		$tmp34 ___257_y ___257_z 	%line{281} %argrw{"wrr"}
	mul		$tmp35 $tmp34 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp36 ___257_x ___257_sinang 	%argrw{"wrr"}
	add		$tmp37 $tmp35 $tmp36 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:283
#                        x * z * cosang1 + y * sinang,
	mul		$tmp38 ___257_x ___257_z 	%line{283} %argrw{"wrr"}
	mul		$tmp39 $tmp38 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp40 ___257_y ___257_sinang 	%argrw{"wrr"}
	add		$tmp41 $tmp39 $tmp40 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:284
#                        y * z * cosang1 - x * sinang,
	mul		$tmp42 ___257_y ___257_z 	%line{284} %argrw{"wrr"}
	mul		$tmp43 $tmp42 ___257_cosang1 	%argrw{"wrr"}
	mul		$tmp44 ___257_x ___257_sinang 	%argrw{"wrr"}
	sub		$tmp45 $tmp43 $tmp44 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:285
#                        z * z + (1.0 - z * z) * cosang,
	mul		$tmp46 ___257_z ___257_z 	%line{285} %argrw{"wrr"}
	mul		$tmp47 ___257_z ___257_z 	%argrw{"wrr"}
	sub		$tmp48 $const15 $tmp47 	%argrw{"wrr"}
	mul		$tmp49 $tmp48 ___257_cosang 	%argrw{"wrr"}
	add		$tmp50 $tmp46 $tmp49 	%argrw{"wrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:275
#     matrix M = matrix (x * x + (1.0 - x * x) * cosang,
	matrix		___257_M $tmp16 $tmp20 $tmp24 $const4 $tmp28 $tmp33 $tmp37 $const4 $tmp41 $tmp45 $tmp50 $const4 $const4 $const4 $const4 $const15 	%line{275} %argrw{"wrrrrrrrrrrrrrrrr"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:288
#     return transform (M, p-a) + a;
	sub		$tmp52 $tmp6 $const12 	%line{288} %argrw{"wrr"}
	transformv	$tmp51 ___257_M $tmp52 	%argrw{"wrr"}
	add		$tmp5 $tmp51 $const12 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:185
#         inputS = QT[0];
	mul		___427_QT $tmp5 frequency 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{185} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:186
#         inputT = QT[1];
	compref		___427_inputS ___427_QT $const6 	%line{186} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:187
#         
	compref		___427_inputT ___427_QT $const2 	%line{187} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:195
#         float myt = inputT;
	assign		___427_mys ___427_inputS 	%line{195} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:196
#         
	assign		___427_myt ___427_inputT 	%line{196} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:211
#                         filter, textureFilterScale, 0,
	functioncall	$const18 104 	%line{211} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:195
#     Texture_GetColor(path, 
	functioncall	$const18 104 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h"} %line{195} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:137
#     int texExists = 1;
	assign		___418_texExists $const2 	%line{137} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:138
#     if (path == "") {
	eq		$tmp54 filename_d1 $const19 	%line{138} %argrw{"wrr"}
	if		$tmp54 83 86 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:139
#         texExists = 0;
	assign		___418_texExists $const6 	%line{139} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:142
#         if (checkMissing > 0) {
	gt		$tmp55 $const6 $const6 	%line{142} %argrw{"wrr"}
	if		$tmp55 86 86 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:146
#             gettextureinfo(path, "exists", texExists);
	gettextureinfo	$tmp56 filename_d1 $const20 ___418_texExists 	%line{146} %argrw{"wrrw"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:149
#     if (texExists == 0) {
	eq		$tmp57 ___418_texExists $const6 	%line{149} %argrw{"wrr"}
	if		$tmp57 99 104 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:150
#         if (checkMissing == 1 && path != "") {
	eq		$tmp58 $const6 $const2 	%line{150} %argrw{"wrr"}
	neq		$tmp59 $tmp58 $const6 	%argrw{"wrr"}
	if		$tmp59 94 94 	%argrw{"r"}
	neq		$tmp60 filename_d1 $const19 	%argrw{"wrr"}
	neq		$tmp61 $tmp60 $const6 	%argrw{"wrr"}
	assign		$tmp59 $tmp61 	%argrw{"wr"}
	if		$tmp59 96 96 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:151
#             warning("texture not found \'%s\'", path);
	warning		$const21 filename_d1 	%line{151} %argrw{"rr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:153
#         result.c = missingColor;
	assign		___427_resultRGBA_d1.c $const17 	%line{153} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:154
#         result.a = missingAlpha;
	assign		___427_resultRGBA_d1.a $const4 	%line{154} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:156
#         warning("TEXTURE NOT FOUND");
	warning		$const22 	%line{156} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:160
#         warning("TEXTURE FOUND");
	warning		$const23 	%line{160} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:161
#         result.c = texture(path, s, 1.0 - t, 
	sub		$tmp62 $const15 ___427_inputT 	%line{161} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:174
#                 "subimage", max(subimage, 0)
	max		$tmp63 $const6 $const6 	%line{174} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:161
#         result.c = texture(path, s, 1.0 - t, 
	texture		___427_resultRGBA_d1.c filename_d1 ___427_inputS $tmp62 $const24 ___427_resultRGBA_d1.a $const25 ___427_filter $const26 $const4 $const27 $const17 $const28 $const4 $const29 $const15 $const30 $const6 $const31 ___427_textureFilterScale $const32 $tmp63 	%line{161} %argrw{"wrrrrwrrrrrrrrrrrrrrrr"} %argderivs{2,3}
	assign		___427_resultRGBA_d1.c ___427_resultRGBA_d1.c 	%argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:216
#                         filter, textureFilterScale, 0,
	functioncall	$const18 131 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{216} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:195
#     Texture_GetColor(path, 
	functioncall	$const18 131 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h"} %line{195} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:137
#     int texExists = 1;
	assign		___418_texExists $const2 	%line{137} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:138
#     if (path == "") {
	eq		$tmp65 filename_d1 $const19 	%line{138} %argrw{"wrr"}
	if		$tmp65 110 113 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:139
#         texExists = 0;
	assign		___418_texExists $const6 	%line{139} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:142
#         if (checkMissing > 0) {
	gt		$tmp66 $const6 $const6 	%line{142} %argrw{"wrr"}
	if		$tmp66 113 113 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:146
#             gettextureinfo(path, "exists", texExists);
	gettextureinfo	$tmp67 filename_d1 $const20 ___418_texExists 	%line{146} %argrw{"wrrw"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:149
#     if (texExists == 0) {
	eq		$tmp68 ___418_texExists $const6 	%line{149} %argrw{"wrr"}
	if		$tmp68 126 131 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:150
#         if (checkMissing == 1 && path != "") {
	eq		$tmp69 $const6 $const2 	%line{150} %argrw{"wrr"}
	neq		$tmp70 $tmp69 $const6 	%argrw{"wrr"}
	if		$tmp70 121 121 	%argrw{"r"}
	neq		$tmp71 filename_d1 $const19 	%argrw{"wrr"}
	neq		$tmp72 $tmp71 $const6 	%argrw{"wrr"}
	assign		$tmp70 $tmp72 	%argrw{"wr"}
	if		$tmp70 123 123 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:151
#             warning("texture not found \'%s\'", path);
	warning		$const21 filename_d1 	%line{151} %argrw{"rr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:153
#         result.c = missingColor;
	assign		___427_resultRGBA_d2.c $const17 	%line{153} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:154
#         result.a = missingAlpha;
	assign		___427_resultRGBA_d2.a $const4 	%line{154} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:156
#         warning("TEXTURE NOT FOUND");
	warning		$const22 	%line{156} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:160
#         warning("TEXTURE FOUND");
	warning		$const23 	%line{160} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:161
#         result.c = texture(path, s, 1.0 - t, 
	sub		$tmp73 $const15 ___427_inputT 	%line{161} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:174
#                 "subimage", max(subimage, 0)
	max		$tmp74 $const6 $const6 	%line{174} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:161
#         result.c = texture(path, s, 1.0 - t, 
	texture		___427_resultRGBA_d2.c filename_d1 ___427_inputS $tmp73 $const24 ___427_resultRGBA_d2.a $const25 ___427_filter $const26 $const4 $const27 $const17 $const28 $const4 $const29 $const15 $const30 $const33 $const31 ___427_textureFilterScale $const32 $tmp74 	%line{161} %argrw{"wrrrrwrrrrrrrrrrrrrrrr"} %argderivs{2,3}
	assign		___427_resultRGBA_d2.c ___427_resultRGBA_d2.c 	%argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:221
#                 filter, textureFilterScale, 0,
	functioncall	$const18 158 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{221} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:195
#     Texture_GetColor(path, 
	functioncall	$const18 158 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h"} %line{195} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:137
#     int texExists = 1;
	assign		___418_texExists $const2 	%line{137} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:138
#     if (path == "") {
	eq		$tmp76 filename_check $const19 	%line{138} %argrw{"wrr"}
	if		$tmp76 137 140 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:139
#         texExists = 0;
	assign		___418_texExists $const6 	%line{139} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:142
#         if (checkMissing > 0) {
	gt		$tmp77 $const6 $const6 	%line{142} %argrw{"wrr"}
	if		$tmp77 140 140 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:146
#             gettextureinfo(path, "exists", texExists);
	gettextureinfo	$tmp78 filename_check $const20 ___418_texExists 	%line{146} %argrw{"wrrw"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:149
#     if (texExists == 0) {
	eq		$tmp79 ___418_texExists $const6 	%line{149} %argrw{"wrr"}
	if		$tmp79 153 158 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:150
#         if (checkMissing == 1 && path != "") {
	eq		$tmp80 $const6 $const2 	%line{150} %argrw{"wrr"}
	neq		$tmp81 $tmp80 $const6 	%argrw{"wrr"}
	if		$tmp81 148 148 	%argrw{"r"}
	neq		$tmp82 filename_check $const19 	%argrw{"wrr"}
	neq		$tmp83 $tmp82 $const6 	%argrw{"wrr"}
	assign		$tmp81 $tmp83 	%argrw{"wr"}
	if		$tmp81 150 150 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:151
#             warning("texture not found \'%s\'", path);
	warning		$const21 filename_check 	%line{151} %argrw{"rr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:153
#         result.c = missingColor;
	assign		___427_resultTest.c $const17 	%line{153} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:154
#         result.a = missingAlpha;
	assign		___427_resultTest.a $const4 	%line{154} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:156
#         warning("TEXTURE NOT FOUND");
	warning		$const22 	%line{156} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:160
#         warning("TEXTURE FOUND");
	warning		$const23 	%line{160} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:161
#         result.c = texture(path, s, 1.0 - t, 
	sub		$tmp84 $const15 ___427_inputT 	%line{161} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:174
#                 "subimage", max(subimage, 0)
	max		$tmp85 $const6 $const6 	%line{174} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrTexture.h:161
#         result.c = texture(path, s, 1.0 - t, 
	texture		___427_resultTest.c filename_check ___427_inputS $tmp84 $const24 ___427_resultTest.a $const25 ___427_filter $const26 $const4 $const27 $const17 $const28 $const4 $const29 $const15 $const30 $const6 $const31 ___427_textureFilterScale $const32 $tmp85 	%line{161} %argrw{"wrrrrwrrrrrrrrrrrrrrrr"} %argderivs{2,3}
	assign		___427_resultTest.c ___427_resultTest.c 	%argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:236
#         deriv2 = resultRGBA_d2.c;
	assign		___427_deriv1 ___427_resultRGBA_d1.c 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{236} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:237
#         
	assign		___427_deriv2 ___427_resultRGBA_d2.c 	%line{237} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:239
#         
	assign		testTex ___427_resultTest.c 	%line{239} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:250
#         // partialDeriv(P, u, v, pPps, pPpt);
	functioncall	$const34 180 	%line{250} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:68
#     vector dQdx = Dx(Q);
	Dx		___371_dQdx P 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h"} %line{68} %argrw{"wr"} %argderivs{1}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:69
#     vector dQdy = Dy(Q);
	Dy		___371_dQdy P 	%line{69} %argrw{"wr"} %argderivs{1}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:71
#     float A = Dx(a);
	Dx		___371_A ___427_mys 	%line{71} %argrw{"wr"} %argderivs{1}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:72
#     float B = Dx(b);
	Dx		___371_B ___427_myt 	%line{72} %argrw{"wr"} %argderivs{1}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:73
#     float C = Dy(a);
	Dy		___371_C ___427_mys 	%line{73} %argrw{"wr"} %argderivs{1}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:74
#     float D = Dy(b);
	Dy		___371_D ___427_myt 	%line{74} %argrw{"wr"} %argderivs{1}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:76
#     float invdet = 1.0/(A*D - B*C);
	mul		$tmp86 ___371_A ___371_D 	%line{76} %argrw{"wrr"}
	mul		$tmp87 ___371_B ___371_C 	%argrw{"wrr"}
	sub		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	div		___371_invdet $const15 $tmp88 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:78
#     dQda = (dQdx*D-dQdy*B)*invdet;
	mul		$tmp89 ___371_dQdx ___371_D 	%line{78} %argrw{"wrr"}
	mul		$tmp90 ___371_dQdy ___371_B 	%argrw{"wrr"}
	sub		$tmp91 $tmp89 $tmp90 	%argrw{"wrr"}
	mul		___427_pPps $tmp91 ___371_invdet 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:79
#     dQdb = (dQdy*A-dQdx*C)*invdet;
	mul		$tmp92 ___371_dQdy ___371_A 	%line{79} %argrw{"wrr"}
	mul		$tmp93 ___371_dQdx ___371_C 	%argrw{"wrr"}
	sub		$tmp94 $tmp92 $tmp93 	%argrw{"wrr"}
	mul		___427_pPpt $tmp94 ___371_invdet 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:255
#         float dy=deriv1[2];
	compref		___427_dx ___427_deriv1 $const2 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{255} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:256
#         float dxdx=deriv2[0];
	compref		___427_dy ___427_deriv1 $const16 	%line{256} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:257
#         float dydy=deriv2[1];
	compref		___427_dxdx ___427_deriv2 $const6 	%line{257} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:258
#         float dxdy=deriv2[2];
	compref		___427_dydy ___427_deriv2 $const2 	%line{258} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:259
# 
	compref		___427_dxdy ___427_deriv2 $const16 	%line{259} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:266
#             dx = -dx;
	eq		$tmp95 invertBumpNormal $const6 	%line{266} %argrw{"wrr"}
	if		$tmp95 189 189 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:267
#             dy = -dy;
	neg		___427_dx ___427_dx 	%line{267} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:268
#         }
	neg		___427_dy ___427_dy 	%line{268} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:278
#         // vector PN = cross(pPps, pPpt);
	cross		___427_PN ___427_pPps ___427_pPpt 	%line{278} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:285
#         if (dot(PN,Ng)<0) {
	assign		___427_lefthanded $const6 	%line{285} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:286
#         // if (dot(PN,normalize(Ng))<0) {
	dot		$tmp96 ___427_PN Ng 	%line{286} %argrw{"wrr"}
	lt		$tmp97 $tmp96 $const6 	%argrw{"wrr"}
	if		$tmp97 195 195 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:292
#         }
	assign		___427_lefthanded $const2 	%line{292} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:308
#         // PN = (N);
	normalize	___427_PN N 	%line{308} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:310
#         
	eq		$tmp98 ___427_lefthanded $const2 	%line{310} %argrw{"wrr"}
	if		$tmp98 199 199 	%argrw{"r"}
	neg		___427_PN ___427_PN 	%argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:315
#         pPpt = cross(PN,pPps);
	cross		$tmp99 ___427_pPpt ___427_PN 	%line{315} %argrw{"wrr"}
	normalize	___427_pPps $tmp99 	%argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:316
#         // pPpt = 1.0 - cross(PN,pPps);
	cross		___427_pPpt ___427_PN ___427_pPps 	%line{316} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:329
#         else resultBumpNormal = vector(dx*bumpNormalGain, dy*bumpNormalGain, -1);
	eq		$tmp100 ___427_lefthanded $const6 	%line{329} %argrw{"wrr"}
	if		$tmp100 207 210 	%argrw{"r"}
	mul		$tmp101 ___427_dx bumpNormalGain 	%argrw{"wrr"}
	mul		$tmp102 ___427_dy bumpNormalGain 	%argrw{"wrr"}
	vector		resultBumpNormal $tmp101 $tmp102 $const15 	%argrw{"wrrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:330
#         
	mul		$tmp103 ___427_dx bumpNormalGain 	%line{330} %argrw{"wrr"}
	mul		$tmp104 ___427_dy bumpNormalGain 	%argrw{"wrr"}
	vector		resultBumpNormal $tmp103 $tmp104 $const36 	%argrw{"wrrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:360
#                         + pPpt*resultBumpNormal[1]
	compref		$tmp105 resultBumpNormal $const6 	%line{360} %argrw{"wrr"}
	mul		$tmp106 ___427_pPps $tmp105 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:361
#                         + PN*resultBumpNormal[2];
	compref		$tmp107 resultBumpNormal $const2 	%line{361} %argrw{"wrr"}
	mul		$tmp108 ___427_pPpt $tmp107 	%argrw{"wrr"}
	add		$tmp109 $tmp106 $tmp108 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:362
# 
	compref		$tmp110 resultBumpNormal $const16 	%line{362} %argrw{"wrr"}
	mul		$tmp111 ___427_PN $tmp110 	%argrw{"wrr"}
	add		resultBumpNormal $tmp109 $tmp111 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:369
# 
	normalize	resultBumpNormal resultBumpNormal 	%line{369} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:408
#         float sxx = 2*vargain*(dxdx - dx*dx);
	mul		___427_vargain gain gain 	%line{408} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:409
#         float sxy = 2*vargain*(dxdy - dx*dy);
	mul		$tmp112 $const37 ___427_vargain 	%line{409} %argrw{"wrr"}
	mul		$tmp113 ___427_dx ___427_dx 	%argrw{"wrr"}
	sub		$tmp114 ___427_dxdx $tmp113 	%argrw{"wrr"}
	mul		___427_sxx $tmp112 $tmp114 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:410
#         float syy = 2*vargain*(dydy - dy*dy);
	mul		$tmp115 $const37 ___427_vargain 	%line{410} %argrw{"wrr"}
	mul		$tmp116 ___427_dx ___427_dy 	%argrw{"wrr"}
	sub		$tmp117 ___427_dxdy $tmp116 	%argrw{"wrr"}
	mul		___427_sxy $tmp115 $tmp117 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:411
# 
	mul		$tmp118 $const37 ___427_vargain 	%line{411} %argrw{"wrr"}
	mul		$tmp119 ___427_dy ___427_dy 	%argrw{"wrr"}
	sub		$tmp120 ___427_dydy $tmp119 	%argrw{"wrr"}
	mul		___427_syy $tmp118 $tmp120 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:416
# 
	functioncall	$const38 261 	%line{416} %argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:110
#     float del = sqrt(a*a+4*b*b-2*a*c+c*c);
	mul		$tmp121 ___427_sxx ___427_sxx 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h"} %line{110} %argrw{"wrr"}
	mul		$tmp122 $const40 ___427_sxy 	%argrw{"wrr"}
	mul		$tmp123 $tmp122 ___427_sxy 	%argrw{"wrr"}
	add		$tmp124 $tmp121 $tmp123 	%argrw{"wrr"}
	mul		$tmp125 $const37 ___427_sxx 	%argrw{"wrr"}
	mul		$tmp126 $tmp125 ___427_syy 	%argrw{"wrr"}
	sub		$tmp127 $tmp124 $tmp126 	%argrw{"wrr"}
	mul		$tmp128 ___427_syy ___427_syy 	%argrw{"wrr"}
	add		$tmp129 $tmp127 $tmp128 	%argrw{"wrr"}
	sqrt		___373_del $tmp129 	%argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:113
#     l1 = .5*(a+c+del);
	add		$tmp130 ___427_sxx ___427_syy 	%line{113} %argrw{"wrr"}
	add		$tmp131 $tmp130 ___373_del 	%argrw{"wrr"}
	mul		___427_l1 $const41 $tmp131 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:114
#     l2 = .5*(a+c-del);
	add		$tmp132 ___427_sxx ___427_syy 	%line{114} %argrw{"wrr"}
	sub		$tmp133 $tmp132 ___373_del 	%argrw{"wrr"}
	mul		___427_l2 $const41 $tmp133 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:117
#     v1=vector(0);
	assign		___427_v1 $const42 	%line{117} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:118
#     v1[1] = 1;
	compassign	___427_v1 $const2 $const2 	%line{118} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:119
#     v1[0] = (l1-c)/b;
	sub		$tmp134 ___427_l1 ___427_syy 	%line{119} %argrw{"wrr"}
	div		$tmp135 $tmp134 ___427_sxy 	%argrw{"wrr"}
	compassign	___427_v1 $const6 $tmp135 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:120
#     v1 = normalize(v1);
	normalize	___427_v1 ___427_v1 	%line{120} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:122
#     v2=vector(0);
	assign		___427_v2 $const42 	%line{122} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:123
#     v2[1] = 1;
	compassign	___427_v2 $const2 $const2 	%line{123} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:124
#     v2[0] = (l2-c)/b;
	sub		$tmp136 ___427_l2 ___427_syy 	%line{124} %argrw{"wrr"}
	div		$tmp137 $tmp136 ___427_sxy 	%argrw{"wrr"}
	compassign	___427_v2 $const6 $tmp137 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2Roughness.h:125
#     v2 = normalize(v2);
	normalize	___427_v2 ___427_v2 	%line{125} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:428
#         vector _pPpv = -pPps*v2[0]+pPpt*v2[1];
	neg		$tmp138 ___427_pPps 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{428} %argrw{"wr"}
	compref		$tmp139 ___427_v1 $const6 	%argrw{"wrr"}
	mul		$tmp140 $tmp138 $tmp139 	%argrw{"wrr"}
	compref		$tmp141 ___427_v1 $const2 	%argrw{"wrr"}
	mul		$tmp142 ___427_pPpt $tmp141 	%argrw{"wrr"}
	add		___427__pPpu $tmp140 $tmp142 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:429
# 
	neg		$tmp143 ___427_pPps 	%line{429} %argrw{"wr"}
	compref		$tmp144 ___427_v2 $const6 	%argrw{"wrr"}
	mul		$tmp145 $tmp143 $tmp144 	%argrw{"wrr"}
	compref		$tmp146 ___427_v2 $const2 	%argrw{"wrr"}
	mul		$tmp147 ___427_pPpt $tmp146 	%argrw{"wrr"}
	add		___427__pPpv $tmp145 $tmp147 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:431
#         
	mul		___427_base_roughsqr baseRoughness baseRoughness 	%line{431} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:438
#         float varianceV = l2+base_roughsqr;
	add		___427_varianceU ___427_l1 ___427_base_roughsqr 	%line{438} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:439
#         
	add		___427_varianceV ___427_l2 ___427_base_roughsqr 	%line{439} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:442
#         float resultRoughnessV = sqrt(varianceV)+1e-12;
	sqrt		$tmp148 ___427_varianceU 	%line{442} %argrw{"wr"}
	add		___427_resultRoughnessU $tmp148 $const43 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:443
#         
	sqrt		$tmp149 ___427_varianceV 	%line{443} %argrw{"wr"}
	add		___427_resultRoughnessV $tmp149 $const43 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:445
#         float resultAnisotropy = (rudivrv-1.0)/(rudivrv+1.0);
	div		___427_rudivrv ___427_resultRoughnessU ___427_resultRoughnessV 	%line{445} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:446
#             
	sub		$tmp150 ___427_rudivrv $const15 	%line{446} %argrw{"wrr"}
	add		$tmp151 ___427_rudivrv $const15 	%argrw{"wrr"}
	div		___427_resultAnisotropy $tmp150 $tmp151 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:448
#             resultAnisotropy = clamp(resultAnisotropy*anisotropyGain, 
	neq		$tmp152 anisotropyGain $const15 	%line{448} %argrw{"wrr"}
	if		$tmp152 301 301 	%argrw{"r"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:449
#                                      0.0, 1.0);
	mul		$tmp153 ___427_resultAnisotropy anisotropyGain 	%line{449} %argrw{"wrr"}
	functioncall	$const44 290 	%argrw{"r"}
# C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp154 $tmp153 $const15 	%filename{"C:\\Program Files\\Blender Foundation\\Blender 3.1\\3.1\\scripts\\addons\\cycles\\shader/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___427_resultAnisotropy $tmp154 $const4 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:452
#                                 2.0*resultAnisotropy+2.0);
	mul		$tmp155 ___427_resultAnisotropy ___427_resultAnisotropy 	%filename{"D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl"} %line{452} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:453
#         
	mul		$tmp156 $const37 ___427_resultAnisotropy 	%line{453} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:452
#                                 2.0*resultAnisotropy+2.0);
	sub		$tmp157 $tmp155 $tmp156 	%line{452} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:453
#         
	add		$tmp158 $tmp157 $const37 	%line{453} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:452
#                                 2.0*resultAnisotropy+2.0);
	div		___430__alpha $const15 $tmp158 	%line{452} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:455
#             varianceU = variance * _alpha;
	add		___430_variance ___427_varianceU ___427_varianceV 	%line{455} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:456
#             varianceV = variance *(1.0-_alpha);
	mul		___427_varianceU ___430_variance ___430__alpha 	%line{456} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:457
#             
	sub		$tmp159 $const15 ___430__alpha 	%line{457} %argrw{"wrr"}
	mul		___427_varianceV ___430_variance $tmp159 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:459
#             resultRoughnessV = sqrt(varianceV);
	sqrt		___427_resultRoughnessU ___427_varianceU 	%line{459} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:460
#         }
	sqrt		___427_resultRoughnessV ___427_varianceV 	%line{460} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:463
#         // resultRoughness           = (rudivrv-1.0)/(rudivrv+1.0);
	add		$tmp160 $const15 ___427_resultAnisotropy 	%line{463} %argrw{"wrr"}
	div		resultRoughness ___427_resultRoughnessU $tmp160 	%argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:467
#         resultHeightMap           = deriv1[0];
	assign		resultAnisotropyDirection ___427__pPpu 	%line{467} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:468
#         // resultHeightMap           = deriv1[1];
	compref		resultHeightMap ___427_deriv1 $const6 	%line{468} %argrw{"wrr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:477
#         resultAnisotropy = 0;
	assign		resultRoughness baseRoughness 	%line{477} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:478
#         resultAnisotropyDirection = vector(1,0,0);
	assign		resultAnisotropy $const6 	%line{478} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:479
#         resultBumpNormal = N;
	assign		resultAnisotropyDirection $const45 	%line{479} %argrw{"wr"}
# D:\\projects_3d\\b2r_blender\\blender\\..\\shaders\\PxrBump2RoughnessRead_abj.osl:480
#     }
	assign		resultBumpNormal N 	%line{480} %argrw{"wr"}
	end
